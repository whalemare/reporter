group 'ru.whalemare'
version '1.0'

buildscript {
    ext.kotlin_version = '1.3.31'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'gradle-one-jar'

apply plugin: 'gradle-one-jar'

group 'ru.whalemare.reporter'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    main.java.srcDirs += 'src/main/java/'
    test.java.srcDirs += 'src/test/kotlin/'
    test.java.srcDirs += 'src/test/java/'
}

repositories {
    mavenCentral()
    maven {
        url "http://jcenter.bintray.com"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'pl.droidsonroids:jspoon:1.2.2'
    implementation group: 'pl.droidsonroids.retrofit2', name: 'converter-jspoon', version: '1.2.2'

    implementation("com.squareup.okhttp3:okhttp:3.14.2")
    implementation "org.funktionale:funktionale-memoization:1.2"

    implementation("org.slf4j:slf4j-log4j12:1.8.0-beta4")
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'

    // https://mvnrepository.com/artifact/com.squareup.moshi/moshi
    implementation group: 'com.squareup.moshi', name: 'moshi', version: '1.8.0'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.0'

    implementation('com.github.ihsanbal:LoggingInterceptor:3.0.0')
    implementation 'info.picocli:picocli:4.0.0-alpha-3'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.2'
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.0.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.2')
    test.useJUnitPlatform()
}

jar {
    baseName = "reporter"
    manifest {
        attributes 'Main-Class': 'ru.whalemare.reporter.App'
    }
}

task makeJar(type: OneJar) {
    mainClass = 'ru.whalemare.reporter.App'
    archiveName = 'reporter.jar'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'ru.whalemare.reporter.MainCliKt'
//    }
//
//
//    // This line of code recursively collects and copies all of a project's files
//    // and adds them to the JAR itself. One can extend this task, to skip certain
//    // files or particular types at will
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}
//
//task fatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'ru.whalemare.reporter.MainCliKt'
//    }
//    baseName = 'reporter'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
